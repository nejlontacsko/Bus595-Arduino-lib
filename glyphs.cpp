//Triangle facing upwards and downwards
byte upArrow[8]   = { 0x00, 0x04, 0x04, 0x0E, 0x0E, 0x1F, 0x00, 0x00 };
byte downArrow[8] = { 0x00, 0x00, 0x1F, 0x0E, 0x0E, 0x04, 0x04, 0x00 };

//The symbol from your keyboard
byte enter[8]     = { 0x01, 0x01, 0x05, 0x0D, 0x1F, 0x0C, 0x04, 0x00 };

//Radiowaves incoming from both sides
byte signalR[8]   = { 0x02, 0x09, 0x05, 0x15, 0x15, 0x05, 0x09, 0x02 };
byte signalL[8]   = { 0x08, 0x12, 0x14, 0x15, 0x15, 0x14, 0x12, 0x08 };

//A stick with a dot on the end, wants to look like an antenna
byte ap[8]        = { 0x00, 0x00, 0x0E, 0x0E, 0x0E, 0x04, 0x04, 0x04 };

//Sofisticated RJ-45 connector
byte ethConn[8]   = { 0x00, 0xe0, 0x1b, 0x11, 0x11, 0x1f, 0x00, 0x00 };

//Symbols to show `true` and `false` values
byte check[8]     = { 0x00, 0x01, 0x03, 0x16, 0x1c, 0x08, 0x00, 0x00 };
byte cross[8]     = { 0x00, 0x11, 0x0a, 0x04, 0x0a, 0x11, 0x00, 0x00 };

uint8_t
    upperAA[8] = { 0x04, 0x04, 0x00, 0x0e, 0x11, 0x1f, 0x11, 0x11 }, //Á
    lowerAA[8] = { 0x04, 0x04, 0x00, 0x0e, 0x01, 0x0f, 0x11, 0x0f }, //á
    upperEE[8] = { 0x04, 0x04, 0x00, 0x1f, 0x10, 0x1e, 0x10, 0x1f }, //É
    lowerEE[8] = { 0x04, 0x04, 0x00, 0x0e, 0x11, 0x1f, 0x10, 0x0e }, //é
    upperII[8] = { 0x04, 0x04, 0x00, 0x0e, 0x04, 0x04, 0x04, 0x0e }, //Í
    lowerII[8] = { 0x04, 0x04, 0x00, 0x04, 0x0c, 0x04, 0x04, 0x0e }, //í
    upperOO[8] = { 0x04, 0x04, 0x0e, 0x11, 0x11, 0x11, 0x11, 0x0e }, //Ó
    lowerOO[8] = { 0x04, 0x04, 0x00, 0x0e, 0x11, 0x11, 0x11, 0x0e }, //ó
    upperDO[8] = { 0x0a, 0x0a, 0x0e, 0x11, 0x11, 0x11, 0x11, 0x0e }, //Ő
    lowerDO[8] = { 0x0a, 0x0a, 0x00, 0x0e, 0x11, 0x11, 0x11, 0x0e }, //ő
    upperUU[8] = { 0x04, 0x04, 0x11, 0x11, 0x11, 0x11, 0x13, 0x0d }, //Ú	
    lowerUU[8] = { 0x04, 0x04, 0x00, 0x11, 0x11, 0x11, 0x13, 0x0d }, //ú
    upperDU[8] = { 0x0a, 0x0a, 0x11, 0x11, 0x11, 0x11, 0x13, 0x0d }, //Ű
    lowerDU[8] = { 0x0a, 0x0a, 0x00, 0x11, 0x11, 0x11, 0x13, 0x0d }; //ű
